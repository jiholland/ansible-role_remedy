---
# tasks file for remedy

- name: Include OS-specific variables.
  ansible.builtin.include_vars:
    file: "{{ ansible_network_os }}.yml"

- name: Include OS-specific tasks.
  ansible.builtin.include_tasks:
    file: setup_{{ ansible_network_os }}.yml

- name: Create token.
  ansible.builtin.uri:
    url: "{{ remedy_login }}"
    method: POST
    headers:
      Content-Type: application/x-www-form-urlencoded
    body:
      "{{ remedy_credentials }}"
    return_content: true
    validate_certs: false
    status_code: 200
  delegate_to: localhost
  run_once: true
  register: remedy_token_output
  check_mode: false
  changed_when: true
  notify: Release remedy token.

- name: Read asset from BMC Remedy.
  ansible.builtin.uri:
    url: "{{ remedy_read_asset }}%22{{ inventory_hostname }}%22"
    method: GET
    headers:
      Accept: application/json
      Content-Type: application/json
      Authorization: "{{ remedy_token }}"
    validate_certs: false
  delegate_to: localhost
  register: remedy_asset_output
  check_mode: false
  changed_when: false

- name: Create asset in BMC Remedy.
  ansible.builtin.uri:
    url: "{{ remedy_create_asset }}"
    method: POST
    headers:
      Accept: application/json
      Content-Type: application/json
      Authorization: "{{ remedy_token }}"
    body_format: json
    body:
      values:
        Name: "{{ remedy_asset['name'] }}"
        Asset ID+: "{{ remedy_asset['id'] }}"
        Primary Capability: "{{ remedy_asset['device_type'] }}"
        Serial Number: "{{ remedy_asset['serial_number'] }}"
        System Role: "{{ remedy_asset['system_role'] }}"
        AssetLifecycleStatus: "{{ remedy_asset['assetlifecyclestatus'] }}"
        Category: "{{ remedy_asset['catagory'] }}"
        Type: "{{ remedy_asset['catagory_type'] }}"
        Model Number: "{{ remedy_asset['model_number'] }}"
        Data Set Id: BMC.ASSET
    validate_certs: false
    status_code: 204
  when: remedy_asset_output['json']['entries'][0] is undefined
  delegate_to: localhost
  changed_when: true
