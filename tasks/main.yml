---
# tasks file for remedy

- name: Include OS-specific tasks.
  ansible.builtin.include_tasks:
    file: "{{ role_path }}/tasks/setup_{{ ansible_network_os }}.yml"

- name: Create token.
  ansible.builtin.uri:
    url: "{{ __remedy_login }}"
    method: POST
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    body:
      "{{ __remedy_credentials }}"
    return_content: true
    validate_certs: false
    status_code: 200
  delegate_to: localhost
  run_once: true
  register: __remedy_token_output
  changed_when: true
  check_mode: false
  notify: Release remedy token.

- name: Read asset from BMC Remedy.
  ansible.builtin.uri:
    url: "{{ __remedy_read_remedy }}%22{{ remedy_name }}%22"
    method: GET
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      Authorization: "AR-JWT {{ __remedy_token_output['content'] }}"
    validate_certs: false
  delegate_to: localhost
  register: __remedy_output
  changed_when: false
  check_mode: false

- name: Create asset in BMC Remedy.
  ansible.builtin.uri:
    url: "{{ __remedy_create_remedy }}"
    method: POST
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
      Authorization: "AR-JWT {{ __remedy_token_output['content'] }}"
    body_format: json
    body:
      values:
        Name: "{{ remedy_name }}"
        remedy ID+: "{{ remedy_id }}"
        Primary Capability: "{{ remedy_device_type }}"
        Serial Number: "{{ ansible_facts['net_serialnum'] }}"
        System Role: "{{ remedy_system_role }}"
        remedyLifecycleStatus: "{{ remedy_remedylifecyclestatus }}"
        Category: "{{ remedy_catagory }}"
        Type: "{{ remedy_catagory_type }}"
        Model Number: "{{ ansible_facts['net_model'] }}"
        Data Set Id: BMC.remedy
    validate_certs: false
    status_code: 204
  when: __remedy_output['json']['entries'][0] is undefined
  delegate_to: localhost
  changed_when: true
